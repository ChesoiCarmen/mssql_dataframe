# CICD Build Pipeline
# https://docs.microsoft.com/en-us/azure/devops/pipelines/?view=azure-devops
# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema%2Cparameter-schema
# https://docs.microsoft.com/azure/devops/pipelines/languages/python
#
# Remote Execution
# 1 Run pipeline in Azure DevOps with remote_agent option selected
#
# Local Execution
# 1 Open PowerShell
# 2 Start the local Azure DevOps agent if previously configured (if not see Contributing.md > CICD Build Pipelines > Local Azure DevOps)
# 2a cd azure-local-pipeline; .\run.cmd;
# 3 Run pipeline in Azure DevOps with remote_agent option deselected
#
# See Also
# --------
#  Contributing.md > CICD Build Pipelines

parameters:
- name: remote_agent
  displayName: Remote Agent (Unselect to Run Local)
  type: boolean
  default: True

jobs:

  # run using Azure DevOps provided virtual machine
  - job: remote
    condition: eq(${{ parameters.remote_agent }}, True)
    displayName: 'pipeline using remote agent'
    # use Windows image for SQL Server Express to be included
    pool:
      vmImage: 'windows-latest'
    steps:
      - task: PowerShell@2
        displayName: 'start SQL Server Express LocalDB'
        inputs:
          targetType: 'inline'
          script: 'sqllocaldb start mssqllocaldb'
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$3.9'
        displayName: 'Use Python 3.9'
      - script: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
        displayName: 'Install Dependancies'
      # execute cicd.py script
      - task: PythonScript@0
        inputs:
          scriptSource: filePath
          script: cicd.py
          arguments: --server=(localdb)\\MSSQLLocalDB

  # run locally on laptop (requires Python and SQL Server Express to be installed)
  - job: local
    condition: eq(${{ parameters.remote_agent }}, False)
    displayName: 'pipeline using local agent'
    # local agent set up as described in Contributing.md
    pool: 'Local Laptop'
    steps:
      # deactivate any environment if activate, then create and activate a new environment
      - script:
          try {deactivate} catch [Management.Automation.CommandNotFoundException] {}
          python -m venv env_local
          .\env_local\Scripts\Activate.ps1
        displayName: 'Create Environment'
      # install requirements from PyPi.org
      - script: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
        displayName: 'Install Dependancies'
      # run the CICD script that contains tests, coverage, etc.
      - task: PythonScript@0
        inputs:
          scriptSource: filePath
          script: cicd.py
          arguments: --server=localhost\SQLEXPRESS
      # deactivate then delete the created environment
      - script:
          deactivate
          Remove-Item .\env_local -Recurse -Force
        displayName: 'Delete Environment'
